package co.edu.usc.interacciones.dao.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class ProductosMoleculasExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table productos_moleculas
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table productos_moleculas
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table productos_moleculas
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_moleculas
     *
     * @mbggenerated
     */
    public ProductosMoleculasExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_moleculas
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_moleculas
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_moleculas
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_moleculas
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_moleculas
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_moleculas
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_moleculas
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_moleculas
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_moleculas
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_moleculas
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table productos_moleculas
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCumIsNull() {
            addCriterion("cum is null");
            return (Criteria) this;
        }

        public Criteria andCumIsNotNull() {
            addCriterion("cum is not null");
            return (Criteria) this;
        }

        public Criteria andCumEqualTo(String value) {
            addCriterion("cum =", value, "cum");
            return (Criteria) this;
        }

        public Criteria andCumNotEqualTo(String value) {
            addCriterion("cum <>", value, "cum");
            return (Criteria) this;
        }

        public Criteria andCumGreaterThan(String value) {
            addCriterion("cum >", value, "cum");
            return (Criteria) this;
        }

        public Criteria andCumGreaterThanOrEqualTo(String value) {
            addCriterion("cum >=", value, "cum");
            return (Criteria) this;
        }

        public Criteria andCumLessThan(String value) {
            addCriterion("cum <", value, "cum");
            return (Criteria) this;
        }

        public Criteria andCumLessThanOrEqualTo(String value) {
            addCriterion("cum <=", value, "cum");
            return (Criteria) this;
        }

        public Criteria andCumLike(String value) {
            addCriterion("cum like", value, "cum");
            return (Criteria) this;
        }

        public Criteria andCumNotLike(String value) {
            addCriterion("cum not like", value, "cum");
            return (Criteria) this;
        }

        public Criteria andCumIn(List<String> values) {
            addCriterion("cum in", values, "cum");
            return (Criteria) this;
        }

        public Criteria andCumNotIn(List<String> values) {
            addCriterion("cum not in", values, "cum");
            return (Criteria) this;
        }

        public Criteria andCumBetween(String value1, String value2) {
            addCriterion("cum between", value1, value2, "cum");
            return (Criteria) this;
        }

        public Criteria andCumNotBetween(String value1, String value2) {
            addCriterion("cum not between", value1, value2, "cum");
            return (Criteria) this;
        }

        public Criteria andMoleculaIsNull() {
            addCriterion("molecula is null");
            return (Criteria) this;
        }

        public Criteria andMoleculaIsNotNull() {
            addCriterion("molecula is not null");
            return (Criteria) this;
        }

        public Criteria andMoleculaEqualTo(Long value) {
            addCriterion("molecula =", value, "molecula");
            return (Criteria) this;
        }

        public Criteria andMoleculaNotEqualTo(Long value) {
            addCriterion("molecula <>", value, "molecula");
            return (Criteria) this;
        }

        public Criteria andMoleculaGreaterThan(Long value) {
            addCriterion("molecula >", value, "molecula");
            return (Criteria) this;
        }

        public Criteria andMoleculaGreaterThanOrEqualTo(Long value) {
            addCriterion("molecula >=", value, "molecula");
            return (Criteria) this;
        }

        public Criteria andMoleculaLessThan(Long value) {
            addCriterion("molecula <", value, "molecula");
            return (Criteria) this;
        }

        public Criteria andMoleculaLessThanOrEqualTo(Long value) {
            addCriterion("molecula <=", value, "molecula");
            return (Criteria) this;
        }

        public Criteria andMoleculaIn(List<Long> values) {
            addCriterion("molecula in", values, "molecula");
            return (Criteria) this;
        }

        public Criteria andMoleculaNotIn(List<Long> values) {
            addCriterion("molecula not in", values, "molecula");
            return (Criteria) this;
        }

        public Criteria andMoleculaBetween(Long value1, Long value2) {
            addCriterion("molecula between", value1, value2, "molecula");
            return (Criteria) this;
        }

        public Criteria andMoleculaNotBetween(Long value1, Long value2) {
            addCriterion("molecula not between", value1, value2, "molecula");
            return (Criteria) this;
        }

        public Criteria andUnidaddilusionIsNull() {
            addCriterion("unidaddilusion is null");
            return (Criteria) this;
        }

        public Criteria andUnidaddilusionIsNotNull() {
            addCriterion("unidaddilusion is not null");
            return (Criteria) this;
        }

        public Criteria andUnidaddilusionEqualTo(String value) {
            addCriterion("unidaddilusion =", value, "unidaddilusion");
            return (Criteria) this;
        }

        public Criteria andUnidaddilusionNotEqualTo(String value) {
            addCriterion("unidaddilusion <>", value, "unidaddilusion");
            return (Criteria) this;
        }

        public Criteria andUnidaddilusionGreaterThan(String value) {
            addCriterion("unidaddilusion >", value, "unidaddilusion");
            return (Criteria) this;
        }

        public Criteria andUnidaddilusionGreaterThanOrEqualTo(String value) {
            addCriterion("unidaddilusion >=", value, "unidaddilusion");
            return (Criteria) this;
        }

        public Criteria andUnidaddilusionLessThan(String value) {
            addCriterion("unidaddilusion <", value, "unidaddilusion");
            return (Criteria) this;
        }

        public Criteria andUnidaddilusionLessThanOrEqualTo(String value) {
            addCriterion("unidaddilusion <=", value, "unidaddilusion");
            return (Criteria) this;
        }

        public Criteria andUnidaddilusionLike(String value) {
            addCriterion("unidaddilusion like", value, "unidaddilusion");
            return (Criteria) this;
        }

        public Criteria andUnidaddilusionNotLike(String value) {
            addCriterion("unidaddilusion not like", value, "unidaddilusion");
            return (Criteria) this;
        }

        public Criteria andUnidaddilusionIn(List<String> values) {
            addCriterion("unidaddilusion in", values, "unidaddilusion");
            return (Criteria) this;
        }

        public Criteria andUnidaddilusionNotIn(List<String> values) {
            addCriterion("unidaddilusion not in", values, "unidaddilusion");
            return (Criteria) this;
        }

        public Criteria andUnidaddilusionBetween(String value1, String value2) {
            addCriterion("unidaddilusion between", value1, value2, "unidaddilusion");
            return (Criteria) this;
        }

        public Criteria andUnidaddilusionNotBetween(String value1, String value2) {
            addCriterion("unidaddilusion not between", value1, value2, "unidaddilusion");
            return (Criteria) this;
        }

        public Criteria andUnidadcomponenteIsNull() {
            addCriterion("unidadcomponente is null");
            return (Criteria) this;
        }

        public Criteria andUnidadcomponenteIsNotNull() {
            addCriterion("unidadcomponente is not null");
            return (Criteria) this;
        }

        public Criteria andUnidadcomponenteEqualTo(String value) {
            addCriterion("unidadcomponente =", value, "unidadcomponente");
            return (Criteria) this;
        }

        public Criteria andUnidadcomponenteNotEqualTo(String value) {
            addCriterion("unidadcomponente <>", value, "unidadcomponente");
            return (Criteria) this;
        }

        public Criteria andUnidadcomponenteGreaterThan(String value) {
            addCriterion("unidadcomponente >", value, "unidadcomponente");
            return (Criteria) this;
        }

        public Criteria andUnidadcomponenteGreaterThanOrEqualTo(String value) {
            addCriterion("unidadcomponente >=", value, "unidadcomponente");
            return (Criteria) this;
        }

        public Criteria andUnidadcomponenteLessThan(String value) {
            addCriterion("unidadcomponente <", value, "unidadcomponente");
            return (Criteria) this;
        }

        public Criteria andUnidadcomponenteLessThanOrEqualTo(String value) {
            addCriterion("unidadcomponente <=", value, "unidadcomponente");
            return (Criteria) this;
        }

        public Criteria andUnidadcomponenteLike(String value) {
            addCriterion("unidadcomponente like", value, "unidadcomponente");
            return (Criteria) this;
        }

        public Criteria andUnidadcomponenteNotLike(String value) {
            addCriterion("unidadcomponente not like", value, "unidadcomponente");
            return (Criteria) this;
        }

        public Criteria andUnidadcomponenteIn(List<String> values) {
            addCriterion("unidadcomponente in", values, "unidadcomponente");
            return (Criteria) this;
        }

        public Criteria andUnidadcomponenteNotIn(List<String> values) {
            addCriterion("unidadcomponente not in", values, "unidadcomponente");
            return (Criteria) this;
        }

        public Criteria andUnidadcomponenteBetween(String value1, String value2) {
            addCriterion("unidadcomponente between", value1, value2, "unidadcomponente");
            return (Criteria) this;
        }

        public Criteria andUnidadcomponenteNotBetween(String value1, String value2) {
            addCriterion("unidadcomponente not between", value1, value2, "unidadcomponente");
            return (Criteria) this;
        }

        public Criteria andConcentracionmoleculaIsNull() {
            addCriterion("concentracionmolecula is null");
            return (Criteria) this;
        }

        public Criteria andConcentracionmoleculaIsNotNull() {
            addCriterion("concentracionmolecula is not null");
            return (Criteria) this;
        }

        public Criteria andConcentracionmoleculaEqualTo(BigDecimal value) {
            addCriterion("concentracionmolecula =", value, "concentracionmolecula");
            return (Criteria) this;
        }

        public Criteria andConcentracionmoleculaNotEqualTo(BigDecimal value) {
            addCriterion("concentracionmolecula <>", value, "concentracionmolecula");
            return (Criteria) this;
        }

        public Criteria andConcentracionmoleculaGreaterThan(BigDecimal value) {
            addCriterion("concentracionmolecula >", value, "concentracionmolecula");
            return (Criteria) this;
        }

        public Criteria andConcentracionmoleculaGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("concentracionmolecula >=", value, "concentracionmolecula");
            return (Criteria) this;
        }

        public Criteria andConcentracionmoleculaLessThan(BigDecimal value) {
            addCriterion("concentracionmolecula <", value, "concentracionmolecula");
            return (Criteria) this;
        }

        public Criteria andConcentracionmoleculaLessThanOrEqualTo(BigDecimal value) {
            addCriterion("concentracionmolecula <=", value, "concentracionmolecula");
            return (Criteria) this;
        }

        public Criteria andConcentracionmoleculaIn(List<BigDecimal> values) {
            addCriterion("concentracionmolecula in", values, "concentracionmolecula");
            return (Criteria) this;
        }

        public Criteria andConcentracionmoleculaNotIn(List<BigDecimal> values) {
            addCriterion("concentracionmolecula not in", values, "concentracionmolecula");
            return (Criteria) this;
        }

        public Criteria andConcentracionmoleculaBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("concentracionmolecula between", value1, value2, "concentracionmolecula");
            return (Criteria) this;
        }

        public Criteria andConcentracionmoleculaNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("concentracionmolecula not between", value1, value2, "concentracionmolecula");
            return (Criteria) this;
        }

        public Criteria andCumLikeInsensitive(String value) {
            addCriterion("upper(cum) like", value.toUpperCase(), "cum");
            return (Criteria) this;
        }

        public Criteria andUnidaddilusionLikeInsensitive(String value) {
            addCriterion("upper(unidaddilusion) like", value.toUpperCase(), "unidaddilusion");
            return (Criteria) this;
        }

        public Criteria andUnidadcomponenteLikeInsensitive(String value) {
            addCriterion("upper(unidadcomponente) like", value.toUpperCase(), "unidadcomponente");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table productos_moleculas
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table productos_moleculas
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}