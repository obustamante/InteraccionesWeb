package co.edu.usc.interacciones.dao.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class ProductosPresentacionesExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table productos_presentaciones
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table productos_presentaciones
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table productos_presentaciones
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_presentaciones
     *
     * @mbggenerated
     */
    public ProductosPresentacionesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_presentaciones
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_presentaciones
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_presentaciones
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_presentaciones
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_presentaciones
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_presentaciones
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_presentaciones
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_presentaciones
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_presentaciones
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table productos_presentaciones
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table productos_presentaciones
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCumIsNull() {
            addCriterion("cum is null");
            return (Criteria) this;
        }

        public Criteria andCumIsNotNull() {
            addCriterion("cum is not null");
            return (Criteria) this;
        }

        public Criteria andCumEqualTo(String value) {
            addCriterion("cum =", value, "cum");
            return (Criteria) this;
        }

        public Criteria andCumNotEqualTo(String value) {
            addCriterion("cum <>", value, "cum");
            return (Criteria) this;
        }

        public Criteria andCumGreaterThan(String value) {
            addCriterion("cum >", value, "cum");
            return (Criteria) this;
        }

        public Criteria andCumGreaterThanOrEqualTo(String value) {
            addCriterion("cum >=", value, "cum");
            return (Criteria) this;
        }

        public Criteria andCumLessThan(String value) {
            addCriterion("cum <", value, "cum");
            return (Criteria) this;
        }

        public Criteria andCumLessThanOrEqualTo(String value) {
            addCriterion("cum <=", value, "cum");
            return (Criteria) this;
        }

        public Criteria andCumLike(String value) {
            addCriterion("cum like", value, "cum");
            return (Criteria) this;
        }

        public Criteria andCumNotLike(String value) {
            addCriterion("cum not like", value, "cum");
            return (Criteria) this;
        }

        public Criteria andCumIn(List<String> values) {
            addCriterion("cum in", values, "cum");
            return (Criteria) this;
        }

        public Criteria andCumNotIn(List<String> values) {
            addCriterion("cum not in", values, "cum");
            return (Criteria) this;
        }

        public Criteria andCumBetween(String value1, String value2) {
            addCriterion("cum between", value1, value2, "cum");
            return (Criteria) this;
        }

        public Criteria andCumNotBetween(String value1, String value2) {
            addCriterion("cum not between", value1, value2, "cum");
            return (Criteria) this;
        }

        public Criteria andPresentacionIsNull() {
            addCriterion("presentacion is null");
            return (Criteria) this;
        }

        public Criteria andPresentacionIsNotNull() {
            addCriterion("presentacion is not null");
            return (Criteria) this;
        }

        public Criteria andPresentacionEqualTo(BigDecimal value) {
            addCriterion("presentacion =", value, "presentacion");
            return (Criteria) this;
        }

        public Criteria andPresentacionNotEqualTo(BigDecimal value) {
            addCriterion("presentacion <>", value, "presentacion");
            return (Criteria) this;
        }

        public Criteria andPresentacionGreaterThan(BigDecimal value) {
            addCriterion("presentacion >", value, "presentacion");
            return (Criteria) this;
        }

        public Criteria andPresentacionGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("presentacion >=", value, "presentacion");
            return (Criteria) this;
        }

        public Criteria andPresentacionLessThan(BigDecimal value) {
            addCriterion("presentacion <", value, "presentacion");
            return (Criteria) this;
        }

        public Criteria andPresentacionLessThanOrEqualTo(BigDecimal value) {
            addCriterion("presentacion <=", value, "presentacion");
            return (Criteria) this;
        }

        public Criteria andPresentacionIn(List<BigDecimal> values) {
            addCriterion("presentacion in", values, "presentacion");
            return (Criteria) this;
        }

        public Criteria andPresentacionNotIn(List<BigDecimal> values) {
            addCriterion("presentacion not in", values, "presentacion");
            return (Criteria) this;
        }

        public Criteria andPresentacionBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("presentacion between", value1, value2, "presentacion");
            return (Criteria) this;
        }

        public Criteria andPresentacionNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("presentacion not between", value1, value2, "presentacion");
            return (Criteria) this;
        }

        public Criteria andViaIsNull() {
            addCriterion("via is null");
            return (Criteria) this;
        }

        public Criteria andViaIsNotNull() {
            addCriterion("via is not null");
            return (Criteria) this;
        }

        public Criteria andViaEqualTo(BigDecimal value) {
            addCriterion("via =", value, "via");
            return (Criteria) this;
        }

        public Criteria andViaNotEqualTo(BigDecimal value) {
            addCriterion("via <>", value, "via");
            return (Criteria) this;
        }

        public Criteria andViaGreaterThan(BigDecimal value) {
            addCriterion("via >", value, "via");
            return (Criteria) this;
        }

        public Criteria andViaGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("via >=", value, "via");
            return (Criteria) this;
        }

        public Criteria andViaLessThan(BigDecimal value) {
            addCriterion("via <", value, "via");
            return (Criteria) this;
        }

        public Criteria andViaLessThanOrEqualTo(BigDecimal value) {
            addCriterion("via <=", value, "via");
            return (Criteria) this;
        }

        public Criteria andViaIn(List<BigDecimal> values) {
            addCriterion("via in", values, "via");
            return (Criteria) this;
        }

        public Criteria andViaNotIn(List<BigDecimal> values) {
            addCriterion("via not in", values, "via");
            return (Criteria) this;
        }

        public Criteria andViaBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("via between", value1, value2, "via");
            return (Criteria) this;
        }

        public Criteria andViaNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("via not between", value1, value2, "via");
            return (Criteria) this;
        }

        public Criteria andCodigoinvimaIsNull() {
            addCriterion("codigoinvima is null");
            return (Criteria) this;
        }

        public Criteria andCodigoinvimaIsNotNull() {
            addCriterion("codigoinvima is not null");
            return (Criteria) this;
        }

        public Criteria andCodigoinvimaEqualTo(String value) {
            addCriterion("codigoinvima =", value, "codigoinvima");
            return (Criteria) this;
        }

        public Criteria andCodigoinvimaNotEqualTo(String value) {
            addCriterion("codigoinvima <>", value, "codigoinvima");
            return (Criteria) this;
        }

        public Criteria andCodigoinvimaGreaterThan(String value) {
            addCriterion("codigoinvima >", value, "codigoinvima");
            return (Criteria) this;
        }

        public Criteria andCodigoinvimaGreaterThanOrEqualTo(String value) {
            addCriterion("codigoinvima >=", value, "codigoinvima");
            return (Criteria) this;
        }

        public Criteria andCodigoinvimaLessThan(String value) {
            addCriterion("codigoinvima <", value, "codigoinvima");
            return (Criteria) this;
        }

        public Criteria andCodigoinvimaLessThanOrEqualTo(String value) {
            addCriterion("codigoinvima <=", value, "codigoinvima");
            return (Criteria) this;
        }

        public Criteria andCodigoinvimaLike(String value) {
            addCriterion("codigoinvima like", value, "codigoinvima");
            return (Criteria) this;
        }

        public Criteria andCodigoinvimaNotLike(String value) {
            addCriterion("codigoinvima not like", value, "codigoinvima");
            return (Criteria) this;
        }

        public Criteria andCodigoinvimaIn(List<String> values) {
            addCriterion("codigoinvima in", values, "codigoinvima");
            return (Criteria) this;
        }

        public Criteria andCodigoinvimaNotIn(List<String> values) {
            addCriterion("codigoinvima not in", values, "codigoinvima");
            return (Criteria) this;
        }

        public Criteria andCodigoinvimaBetween(String value1, String value2) {
            addCriterion("codigoinvima between", value1, value2, "codigoinvima");
            return (Criteria) this;
        }

        public Criteria andCodigoinvimaNotBetween(String value1, String value2) {
            addCriterion("codigoinvima not between", value1, value2, "codigoinvima");
            return (Criteria) this;
        }

        public Criteria andVolumenIsNull() {
            addCriterion("volumen is null");
            return (Criteria) this;
        }

        public Criteria andVolumenIsNotNull() {
            addCriterion("volumen is not null");
            return (Criteria) this;
        }

        public Criteria andVolumenEqualTo(Integer value) {
            addCriterion("volumen =", value, "volumen");
            return (Criteria) this;
        }

        public Criteria andVolumenNotEqualTo(Integer value) {
            addCriterion("volumen <>", value, "volumen");
            return (Criteria) this;
        }

        public Criteria andVolumenGreaterThan(Integer value) {
            addCriterion("volumen >", value, "volumen");
            return (Criteria) this;
        }

        public Criteria andVolumenGreaterThanOrEqualTo(Integer value) {
            addCriterion("volumen >=", value, "volumen");
            return (Criteria) this;
        }

        public Criteria andVolumenLessThan(Integer value) {
            addCriterion("volumen <", value, "volumen");
            return (Criteria) this;
        }

        public Criteria andVolumenLessThanOrEqualTo(Integer value) {
            addCriterion("volumen <=", value, "volumen");
            return (Criteria) this;
        }

        public Criteria andVolumenIn(List<Integer> values) {
            addCriterion("volumen in", values, "volumen");
            return (Criteria) this;
        }

        public Criteria andVolumenNotIn(List<Integer> values) {
            addCriterion("volumen not in", values, "volumen");
            return (Criteria) this;
        }

        public Criteria andVolumenBetween(Integer value1, Integer value2) {
            addCriterion("volumen between", value1, value2, "volumen");
            return (Criteria) this;
        }

        public Criteria andVolumenNotBetween(Integer value1, Integer value2) {
            addCriterion("volumen not between", value1, value2, "volumen");
            return (Criteria) this;
        }

        public Criteria andCumLikeInsensitive(String value) {
            addCriterion("upper(cum) like", value.toUpperCase(), "cum");
            return (Criteria) this;
        }

        public Criteria andCodigoinvimaLikeInsensitive(String value) {
            addCriterion("upper(codigoinvima) like", value.toUpperCase(), "codigoinvima");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table productos_presentaciones
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table productos_presentaciones
     *
     * @mbggenerated
     */
    public static class Criterion {
        private final String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private final String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}