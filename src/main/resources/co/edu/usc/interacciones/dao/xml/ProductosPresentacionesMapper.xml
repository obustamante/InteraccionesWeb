<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="co.edu.usc.interacciones.dao.model.ProductosPresentacionesMapper">
    <resultMap id="BaseResultMap" type="co.edu.usc.interacciones.dao.model.ProductosPresentaciones">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="idcum" property="idcum" jdbcType="NUMERIC"/>
        <result column="cum" property="cum" jdbcType="VARCHAR"/>
        <result column="presentacion" property="presentacion" jdbcType="NUMERIC"/>
        <result column="via" property="via" jdbcType="NUMERIC"/>
        <result column="idcodigoinvima" property="idcodigoinvima" jdbcType="NUMERIC"/>
        <result column="volumen" property="volumen" jdbcType="NUMERIC"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        idcum, cum, presentacion, via, idcodigoinvima, volumen
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="co.edu.usc.interacciones.dao.model.ProductosPresentacionesExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from usc.productos_presentaciones
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="co.edu.usc.interacciones.dao.model.ProductosPresentacionesExample">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from usc.productos_presentaciones
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="co.edu.usc.interacciones.dao.model.ProductosPresentaciones">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into usc.productos_presentaciones (idcum, cum, presentacion,
        via, idcodigoinvima, volumen
        )
        values (#{idcum,jdbcType=NUMERIC}, #{cum,jdbcType=VARCHAR}, #{presentacion,jdbcType=NUMERIC},
        #{via,jdbcType=NUMERIC}, #{idcodigoinvima,jdbcType=NUMERIC}, #{volumen,jdbcType=NUMERIC}
        )
    </insert>
    <insert id="insertSelective" parameterType="co.edu.usc.interacciones.dao.model.ProductosPresentaciones">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into usc.productos_presentaciones
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="idcum != null">
                idcum,
            </if>
            <if test="cum != null">
                cum,
            </if>
            <if test="presentacion != null">
                presentacion,
            </if>
            <if test="via != null">
                via,
            </if>
            <if test="idcodigoinvima != null">
                idcodigoinvima,
            </if>
            <if test="volumen != null">
                volumen,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="idcum != null">
                #{idcum,jdbcType=NUMERIC},
            </if>
            <if test="cum != null">
                #{cum,jdbcType=VARCHAR},
            </if>
            <if test="presentacion != null">
                #{presentacion,jdbcType=NUMERIC},
            </if>
            <if test="via != null">
                #{via,jdbcType=NUMERIC},
            </if>
            <if test="idcodigoinvima != null">
                #{idcodigoinvima,jdbcType=NUMERIC},
            </if>
            <if test="volumen != null">
                #{volumen,jdbcType=NUMERIC},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="co.edu.usc.interacciones.dao.model.ProductosPresentacionesExample"
            resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from usc.productos_presentaciones
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update usc.productos_presentaciones
        <set>
            <if test="record.idcum != null">
                idcum = #{record.idcum,jdbcType=NUMERIC},
            </if>
            <if test="record.cum != null">
                cum = #{record.cum,jdbcType=VARCHAR},
            </if>
            <if test="record.presentacion != null">
                presentacion = #{record.presentacion,jdbcType=NUMERIC},
            </if>
            <if test="record.via != null">
                via = #{record.via,jdbcType=NUMERIC},
            </if>
            <if test="record.idcodigoinvima != null">
                idcodigoinvima = #{record.idcodigoinvima,jdbcType=NUMERIC},
            </if>
            <if test="record.volumen != null">
                volumen = #{record.volumen,jdbcType=NUMERIC},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update usc.productos_presentaciones
        set idcum = #{record.idcum,jdbcType=NUMERIC},
        cum = #{record.cum,jdbcType=VARCHAR},
        presentacion = #{record.presentacion,jdbcType=NUMERIC},
        via = #{record.via,jdbcType=NUMERIC},
        idcodigoinvima = #{record.idcodigoinvima,jdbcType=NUMERIC},
        volumen = #{record.volumen,jdbcType=NUMERIC}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
</mapper>